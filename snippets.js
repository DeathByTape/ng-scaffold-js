module.exports = { 'snippets/karma.conf.js': 'module.exports = function(config) {\n  config.set({\n    basePath: \'\',\n    frameworks: [\'jasmine\',\'browserify\'],\n    files: [\n    \'tests/**/*.js\'\n    ],\n    preprocessors: {\n      \'tests/**/*.js\': [\'browserify\'],\n    },\n    plugins:[\n    \'karma-mocha-reporter\',\n    \'karma-jasmine\',\n    \'karma-browserify\',\n    \'karma-chrome-launcher\'\n    ],\n    reporters: [\'mocha\'],\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    autoWatch: true,\n    browsers: [\'Chrome\'],\n    browserify: {\n      debug: true,\n      transform:[\'debowerify\',\'bulkify\',\'ng-browserify-transform\']\n    },\n    singleRun: false\n  });\n};\n',
  'snippets/index.html': '<!DOCTYPE html>\n<html>\n<head>\n  <meta charset="utf-8">\n  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n  <title></title>\n  <meta name="description" content="">\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <link rel="stylesheet" href="dist/app.css">\n\n  <!--[if lt IE 9]>\n  <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>\n  <script>window.html5 || document.write(\'<script src="js/vendor/html5shiv.js"><\\/script>\')</script>\n  <![endif]-->\n</head>\n<body>\n  <div ng-view>\n  </div>\n  <script src="dist/app.js"></script>\n</body>\n</html>\n',
  'snippets/app/app.js': '/*\n  Extends boot.js file inside core directory and initiates angular app\n  --------------------------------------------------------------------\n                            NOTICE\n  --------------------------------------------------------------------\n  To keep this file clean make sure you do not write any code inside\n  it , and use it your imports only\n */\nvar boot;\n\nboot = require(\'../core/boot\');\n\nboot();\n\n\n/*\n   * Uncomment when you create validations\n  require \'./validations\'\n */\n\n\n/*\n   * Uncomment when you create filters\n  require \'./filters\'\n */\n\n\n/*\n   * Uncomment when you create factory\n  require \'./factories\'\n */\n\n\n/*\n   * Uncomment when you write services\n  require \'./store\'\n */\n\n\n/*\n   * Uncomment when you create directives\n  require \'./directives\'\n */\n\nrequire(\'./templates\');\n\nrequire(\'./controllers\');\n',
  'snippets/app/constants.js': '/*\n  Constants for your angular app, There are available globally\n  This file only contains constants not variables , so they cannot be changed\n\n    @example\n    baseUrl: \'http://www.address.com\'\n\n    $http.get({@= LET.baseUrl @}).success(function(){\n\n    });\n\n    will produce\n\n    $http.get(\'http://www.address.com\').success(function(){\n\n    });\n\n    using multiple constants together\n\n    userPath: \'users\'\n\n    $http.get({@= LET.baseUrl @}/{@= LET.userPath @}).success(function(){\n    });\n\n    will produce\n\n    $http.get(\'http://www.address.com/user\').success(function(){\n\n    });\n */\nvar CONSTANTS;\n\nCONSTANTS = {};\n\nmodule.exports = CONSTANTS;\n',
  'snippets/core/boot.js': 'var boot, bulk, initAngularApp, initializers;\n\nrequire("angular");\n\nrequire("{{router}}");\n\nrequire("angular-deferred-bootstrap");\n\nbulk = require("bulk-require");\n\ninitAngularApp = function(hash, dependencies) {\n  angular.element(document).ready(function() {\n    deferredBootstrapper.bootstrap({\n      element: document.body,\n      module: "{@= app_name @}",\n      injectorModules: dependencies,\n      resolve: hash\n    });\n    return require("../app/hooks");\n  });\n};\n\ninitializers = bulk(__dirname, ["../app/initializers/*.js"]);\n\nboot = function(dependencies) {\n  var app, deps, identifier, injectorDependencies, mapHash, name, objectKeys, resolvesList, x;\n  deps = ["{{modules}}"];\n  if (typeof dependencies === "object") {\n    deps = deps.concat(dependencies);\n  }\n  app = angular.module("{@= app_name @}", deps);\n  mapHash = {};\n  injectorDependencies = ["{@= app_name @}"];\n  if (Object.keys(initializers).length > 0 && typeof initializers[".."] !== "undefined" && typeof initializers[".."]["app"] !== "undefined") {\n    resolvesList = initializers[".."]["app"].initializers;\n    objectKeys = Object.keys(resolvesList);\n    x = 0;\n    while (x < objectKeys.length) {\n      identifier = objectKeys[x];\n      name = resolvesList[identifier].provider;\n      mapHash[name] = resolvesList[identifier].resolve;\n      if (typeof resolvesList[identifier].dependencies !== "undefined") {\n        injectorDependencies = injectorDependencies.concat(resolvesList[identifier].dependencies);\n      }\n      x++;\n    }\n  }\n  initAngularApp(mapHash, injectorDependencies);\n};\n\nmodule.exports = boot;\n',
  'snippets/app/routes.js': '/*\n  ----------------------------------------------------------------------\n                            ROUTES\n  ----------------------------------------------------------------------\n  1. Define your routes here.\n  2. If your app does not have routes , simple export an empty object\n      @example\n        module.exports = {}\n */\nvar routeMap;\n\nrouteMap = [\n  {\n    url: \'/\',\n    templateUrl: "welcome.html",\n    controller: \'welcomeCtrl\'\n  }\n];\n\nmodule.exports = routeMap;\n',
  'snippets/app/hooks/config.js': 'var routeMap;\n\nrouteMap = require(\'../routes.js\');\n\nmodule.exports = /* @ngInject */ function($routeProvider, $locationProvider) {\n  angular.forEach(routeMap, function(route) {\n    var url;\n    if (typeof route.otherwise !== "undefined") {\n      $routeProvider.otherwise({\n        redirectTo: route.otherwise\n      });\n    } else {\n      url = route.url;\n      delete route.url;\n      $routeProvider.when(url, route);\n    }\n  });\n};\n\n/** OR */\n\nrouteMap = require(\'../routes.js\');\n\nmodule.exports = /* @ngInject */ function($stateProvider, $urlRouterProvider) {\n  angular.forEach(routeMap, function(route) {\n    var state;\n    if (typeof route.otherwise !== "undefined") {\n      $urlRouterProvider.otherwise(route.otherwise);\n    }\n    state = route.url;\n    if (route.state) {\n      state = route.state;\n      delete route.state;\n    }\n    $stateProvider.state(state, route);\n  });\n};\n',
  'snippets/app/controllers/welcomeCtrl.js': '/* @name: welcomeCtrl */\n/* @ngInject */\nmodule.exports = function($scope) {\n  return $scope.greeting = \'Hello world! This is ngCLI Boilerplate.\';\n};\n',
  'snippets/app/hooks/index.js': 'var app;\napp = angular.module("<%= app_name %>");\napp.config(require(\'./config\'));\napp.run(require(\'./run\'));\n',
  'snippets/app/hooks/run.js': '// Generated by CoffeeScript 1.7.1\n\n/* @ngInject */\nmodule.exports = function($rootScope) {};\n',
  'snippets/app/styles/app.css': '*{\n  margin: 0;\n  padding: 0;\n}\nbody{\n  background: #f0f0f0;\n  font-family: "arial";\n}\n#intro{\n  background: #fff;\n  width: 500px;\n  padding: 40px;\n  margin: 100px auto 0px auto;\n  text-align:center;\n}\n#intro p{\n  font-size: 30px;\n  margin-bottom: 30px;\n}\ntable{\n  width: 100%;\n  border-collapse: collapse;\n}\ntable th,table td{\n  padding: 5px;\n  text-align:left;\n  border: 1px solid #e8e8e8;\n}\n',
  'snippets/app/templates/welcome.html': '<div id="intro">\n  <p>{{greeting}}</p>\n  <table>\n    <thead>\n      <tr>\n        <th>\n          Route\n        </th>\n        <th>\n          Controller\n        </th>\n        <th>\n          Template\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          /\n        </td>\n        <td>\n          welcomeCtrl\n        </td>\n        <td>\n          welcome.html\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n' }